# microservice specific routes
->          /hmrc-frontend                                                      hmrcfrontend.Routes
GET         /assets/*file                               						controllers.Assets.versioned(path="/public", file: Asset)

GET         /                                                                   controllers.ChooseAnOptionController.get
GET         /choose-option-to-get-residency-status                              controllers.ChooseAnOptionController.get
GET         /residency-status-added                                             controllers.ChooseAnOptionController.renderUploadResultsPage
GET         /choose-option-to-get-residency-status/results/:fileName            controllers.ChooseAnOptionController.getResultsFile(fileName:String)
GET         /no-results-available                                               controllers.ChooseAnOptionController.renderNoResultAvailablePage
GET         /results-not-available                                              controllers.ChooseAnOptionController.renderNoResultsAvailableYetPage
GET         /file-ready                                                         controllers.ChooseAnOptionController.renderFileReadyPage

GET         /upload-a-file                                                      controllers.UpscanController.get
GET         /upload-a-file/back                                                 controllers.UpscanController.back

GET         /file-uploaded                                                      controllers.UpscanController.uploadSuccess
GET         /file-upload-failed                                                 controllers.UpscanController.uploadError

GET         /cannot-upload-another-file                                         controllers.UpscanController.uploadInProgress

GET         /member-name                                                        controllers.MemberNameController.get(edit: Boolean ?= false)
POST        /member-name                                                        controllers.MemberNameController.post(edit: Boolean ?= false)
GET         /member-name/back                                                   controllers.MemberNameController.back(edit: Boolean ?= false)

GET         /member-national-insurance-number                                   controllers.MemberNinoController.get(edit: Boolean ?= false)
POST        /member-national-insurance-number                                   controllers.MemberNinoController.post(edit: Boolean ?= false)
GET         /member-national-insurance-number/back                              controllers.MemberNinoController.back(edit: Boolean ?= false)

GET         /member-date-of-birth                                               controllers.MemberDOBController.get(edit: Boolean ?= false)
POST        /member-date-of-birth                                               controllers.MemberDOBController.post(edit: Boolean ?= false)
GET         /member-date-of-birth/back                                          controllers.MemberDOBController.back(edit: Boolean ?= false)

GET         /member-residency-status                                            controllers.ResultsController.matchFound

GET         /no-residency-status-displayed                                      controllers.ResultsController.noMatchFound
GET         /no-residency-status-displayed/back                                 controllers.ResultsController.back

GET         /global-error                                                       controllers.ErrorController.renderGlobalErrorPage
GET         /file-upload-problem                                                controllers.ErrorController.renderProblemUploadingFilePage
GET         /file-not-available                                                 controllers.ErrorController.fileNotAvailable
GET         /not-authorised                                                     controllers.ErrorController.notAuthorised
GET         /service-start-at-start                                             controllers.ErrorController.startAtStart

GET         /check-another-member/:target                                       controllers.SessionController.redirect(target:String, cleanSession:Boolean, edit:Boolean ?= false)
GET         /keep-alive                                                         controllers.SessionController.keepAlive

GET         /logout                                                             controllers.LogoutController.logout

GET         /signed-out                                                         controllers.SignedOutController.signedOut